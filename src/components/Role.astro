---
interface Props {
  title: string;
  begin: string;
  end: string;
  company: string;
  companyURL: string;
  companyIcon: string;
  hiddenFromATS: boolean;
  info: string;
  infoURL: string;
  stack: string[];
  design: string[];
}

const {
  title,
  begin,
  end,
  company,
  companyURL,
  companyIcon,
  hiddenFromATS,
  info,
  infoURL,
  stack,
  design
} = Astro.props;

const beginDate = new Date(begin);
const endDate = new Date(end);

const beginMonth = String(beginDate.getMonth() + 2).padStart(2, '0');
const beginYear = `${beginDate.getFullYear()}`;

const endMonth = String(endDate.getMonth() + 2).padStart(2, '0');
const endYear = `${endDate.getFullYear()}`;

const diffYear = endDate.getFullYear() - beginDate.getFullYear();
const diffMonth = endDate.getMonth() - beginDate.getMonth();

let totalYears = diffYear;
let totalMonths = diffMonth;

if (diffMonth < 0) {
  totalYears--;
  totalMonths = diffMonth + 12;
}

let duration = '';

if (totalYears > 0) {
  duration += `${totalYears}Y`;
}

if (totalMonths > 0) {
  if (duration) {
    duration += '';
  }
  duration += `${totalMonths}M`;
}
---
<section class="flex flex-col gap-2">
  <div class="flex justify-between items-center">
    <span class="flex items-center gap-1.5 font-medium text-xs text-gray-400">
      <span class="[&>svg]:inline leading-none" set:html={companyIcon}/>
      <h4 class="inline flex-initial max-w-none">
        <span class:list={[hiddenFromATS && '[filter:opacity(0.99)]']}>{title}</span>

        <span class:list={['text-gray-300', hiddenFromATS && '[filter:opacity(0.99)]']}>@</span>

        <a href={companyURL}>
          <span class:list={[hiddenFromATS && '[filter:opacity(0.99)]']}>{company}</span>
        </a>
        
        {info && (
          infoURL ?
          <span class="font-normal text-[10px]">
            (<a href={infoURL}><span class="[filter:opacity(0.99)]">{info}</span></a>)
          </span>
          :
          <span class="font-normal text-[10px] [filter:opacity(0.99)]">
            ({info})
          </span>
        )
        }
      </h4>
    </span>
    <span class="text-gray-400 text-[10px]"><b class="[filter:opacity(0.99)] font-medium">{duration}</b> | {beginMonth}/{beginYear} - {endMonth}/{endYear}</span>
  </div>

  {!Astro.slots.default ? null : (
    <div class="contents [&_strong]:font-semibold [&_*]:text-[11px] [&_*]:max-w-none [&_li]:p-0 [&_ul]:flex [&_ul]:flex-col [&_ul]:gap-2 [&_li] tracking-tight [&_li]:before:content-['â€¢'] [&_li]:before:mr-0.5 leading-snug">
      <slot />
    </div>
  )}

  {(stack?.length > 0 || design?.length > 0) &&
    <section class="flex items-center gap-1.5">
      <svg class="inline" xmlns="http://www.w3.org/2000/svg" width="12" height="13" fill="none" viewBox="0 0 12 13">
        <path stroke="#8F8F91" stroke-linecap="round" stroke-linejoin="round" d="m0 6.5 5.333 2.666 5.334-2.667M0 9.166l5.333 2.667 5.334-2.667m-5.334-8L0 3.833l5.333 2.666 5.334-2.666-5.334-2.667Z"/>
      </svg>
      <p class="text-gray-900 text-[10px] max-w-none">
        {stack.length > 0 && (
          <>
            <strong>{stack[0]}</strong>{stack.slice(1).length > 0 && `, ${stack.slice(1).join(', ')}`}
          </>
        )}
        {design?.length > 0 && ` / ${design.join(', ')}`}
      </p>
    </section>
  }
</section>

<script>

console.log(Astro.slots.default);

</script>