---
interface Props {
  supressed: boolean;
  title: string;
  begin: string;
  end: string;
  location: string;
  company: string;
  companyURL: string;
  info: string;
  responsibilities: string[];
  stack: string[];
  design: string[];
}

const { supressed, title, begin, end, location, company, companyURL, info, responsibilities, stack, design } = Astro.props;

const beginDate = new Date(begin);
const endDate = new Date(end);

const beginMonth = `${beginDate.toLocaleString('en-US', { month: 'short' })}`;
const beginYear = `${beginDate.getFullYear()}`;
const endMonth = `${endDate.toLocaleString('en-US', { month: 'short' })}`;
const endYear = `${endDate.getFullYear()}`;

const diffYear = endDate.getFullYear() - beginDate.getFullYear();
const diffMonth = endDate.getMonth() - beginDate.getMonth();

let totalYears = diffYear;
let totalMonths = diffMonth;

if (diffMonth < 0) {
  totalYears--;
  totalMonths = diffMonth + 12;
}

let duration = '';

if (totalYears > 0) {
  duration += `${totalYears}Y`;
}

if (totalMonths > 0) {
  if (duration) {
    duration += ' ';
  }
  duration += `${totalMonths}M`;
}
---
<section class="role-item">
    <div class=`heading ${supressed ? '-supressed' : ''}`>
      <h4>{title}</h4>
      {supressed &&
      <span class="company-info">
        <p>{location}@ <b><a href={companyURL}>{company}</a></b> · <b>{info}</b></p>
      </span>
      }
      <b class="duration">
        <span class="month">{beginMonth}</span> {beginYear}<span class={beginYear === endYear ? 'hiddenyear' : ''}> - <span class="month">{endMonth} </span>{endYear}</span> ({duration})
      </b>
    </div>

  {!supressed &&
    <div class="subheading">
      <span class="company-info">
        <p>{location} @ <b><a href={companyURL}>{company}</a></b></p>
        <b>{info}</b>
      </span>
    </div>
  }

  <slot />
  {(stack?.length > 0 || design?.length > 0) &&
    <section class="role-stacks">
      {stack?.length > 0 &&
        <div class="stack">
          <h5 class="title">Tech Stack</h5>
          <svg class="icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 15 15"><path stroke="#000" stroke-linecap="round" stroke-linejoin="round" stroke-width="1.414" d="M3.889 4.75 1 7.5l2.889 2.75m7.222-5.5L14 7.5l-2.889 2.75M8.944 2 6.056 13"/></svg>
          <ul class="list">
            {stack.map(item => (
              <li>{item}</li>
            ))}
          </ul>
        </div>
      }

      {design?.length > 0 &&
        <div class="stack">
          <h5 class="title">Design</h5>
          <svg class="icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 15 15"><path fill="#000" d="M14 5.751a1.063 1.063 0 0 0-.314-.757l-3.68-3.68a1.07 1.07 0 0 0-1.515 0l-1.49 1.49-3.066 1.15a1.071 1.071 0 0 0-.681.827L2.009 12.25a.643.643 0 0 0 .741.741l7.47-1.245a1.075 1.075 0 0 0 .828-.68l1.15-3.067 1.49-1.49A1.064 1.064 0 0 0 14 5.75Zm-4.114 4.747-5.368.895 1.768-1.768a1.821 1.821 0 1 0-.91-.91l-1.768 1.767.894-5.367 2.695-1.01 3.699 3.699-1.01 2.694ZM6.5 7.965a.536.536 0 1 1 1.072 0 .536.536 0 0 1-1.072 0Zm5.143-1.233L8.268 3.358l.983-.983 3.374 3.375-.982.982Z"/></svg>
          <ul class="list">
            {design.map(tool => (
              <li>{tool}</li>
            ))}
          </ul>
        </div>
      }
    </section>
  }
</section>

<style lang="scss" is:global>
.role-item {
  .heading {
    display: flex;
    justify-content: space-between;
    align-items: center;

    .duration {
      font-size: var(--font-size-0);
      color: var(--gray-6);

      .month {
        display: inline-flex;
        height: 0;
        width: 0;
        opacity: 0.01;
      }

      .hiddenyear {
        display: inline-flex;
        height: 0;
        width: 0;
        opacity: 0.01;
      }
    }

    &.-supressed {
      gap: var(--size-1);
      h4 {
        font-size: var(--font-size-0);
      }
    }
  }

  .subheading {
    display: flex;
    justify-content: space-between;
    line-height: var(--font-lineheight-4);
  }

  .company-info {
    flex: 1;
    display: flex;
    justify-content: space-between;

    :is(p,b,a) {
      font-size: 10px;
      font-weight: var(--font-weight-4);
      text-transform: uppercase;
    }
  }

  ul {
    margin-block: 10px;
    list-style-position: inside;
    padding: 0;

    li {
      padding: 0;
      font-size: 11px;
      max-width: unset;
      margin-top: var(--size-2);
      letter-spacing: -0.0175em;

      &::marker {
        content: '• ';
        font-weight: var(--font-weight-8);
        padding-right: 10px;
      }
    }
  }

  &:not(:last-of-type) {
    border-bottom: 1px solid var(--gray-4);
    padding-bottom: 12px;
  }
}

.role-stacks {
  display: flex;
  gap: var(--size-2);

  .stack {
    display: flex;
  }
  .title {
    display: inline-flex;
    opacity: 0.01;
    height: 0;
    width: 0;
    font-size: var(--font-size-0);
  }

  .icon {
    width: 14px;
    margin-right: var(--size-1);
  }

  .list {
    display: inline-flex;
    gap: var(--size-1);
    position: relative;
    margin: 0;

    li {
      text-transform: uppercase;
      color: var(--gray-7);
      font-size: 10px;
      margin: 0;

      &:not(:last-of-type)::after {
        content: ', ';
      }

      &::marker {
        content: '';
      }
    }
  }
}
</style>
